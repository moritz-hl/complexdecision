imp:  conj "==>" disj -> imp
conj: [rel ("/\\" rel)*] -> conj
disj: [eq ("\\/" eq)*] -> disj
?rel : ineq
       | eq
?ineq: term "/=" term -> ineq
?eq: term "=" term -> eq
?term: sum
?sum: product
    | sum "+" product   -> add
    | sum "-" product   -> sub
?product: atom
    | product "*" atom  -> mul
    | product "/" num  -> div
?atom: NUMBER           -> number
    | "-" atom         -> neg
    | NAME             -> var
    | "(" sum ")"
    | atom "^" num  -> power
?num: NUMBER           -> number
    
%import common.CNAME -> NAME
%import common.NUMBER
%import common.WS_INLINE
%ignore WS_INLINE